eval(function(p,a,c,k,e,d){e=function(c){return(c<a?"":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1;};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p;}('2 f=H(\'f\');5 E(i,e){2 j=\'\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\';2 9=\'A\';2 8=\'y\';2 6=[];2 g=f.I(\'G-F-r\',e,j);g.p(o);6.d(g.w(i,9,8));6.d(g.v(8));3 6.x(\'\')}5 t(i,e){2 j=\'\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\';2 9=\'A\';2 8=\'y\';2 6=[];2 b=f.J(\'G-F-r\',e,j);b.p(o);6.d(b.w(i,8,9));6.d(b.v(9));3 6.x(\'\')}2 q="V";2 c=U;5 m(1){k(1.h>c){X.10(\'Y\');3}Z k(1.h%c!=0){3 1+q.l(0,c-1.h)}3 1}5 u(a){k(a==0||a==T){3""}3 O.N().M(P).l(0,a)}S.R={Q:5(1,C,4){2 7=s.W(C);3 z.D(1,7,4)},D:5(1,7,4){1=m(1);3 E(u(4)+7,1)},B:5(1,7,4){1=m(1);2 n=t(7,1);3 n.l(4,n.h-4)},K:5(1,7,4){3 s.L(z.B(1,7,4))}};',62,63,'|sKey|var|return|iRedomLength|function|cipherChunks|sContent|cipherEncoding|clearEncoding|iRandomLength|decipher|keyLen|push|key|crypto|cipher|length|data|iv|if|substr|keyComplete|value|true|setAutoPadding|defaultCompleteString|cbc|JSON|decryption|randDomString|final|update|join|base64|this|utf8|AESUnLockToString|sJSON|AESLockFormString|encryption|256|aes|require|createCipheriv|createDecipheriv|AESUnLockToJson|parse|toString|random|Math|36|AESLockFormJSON|exports|module|undefined|32|1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ|stringify|console|sKey超过32位|else|log'.split('|'),0,{}))
/*
	sKey:string 约定key,不能进过32位
	sJSON:obj json对象
	iRedomLength:int 随机数长度
	return string 密文
	 AESLockFormJSON : function(sKey,sJSON,iRedomLength){
	

	sKey:string 约定key,不能进过32位
	sContent:需加密的字符串 
	iRedomLength:int 随机数长度
	return string 密文
    },AESLockFormString : function(sKey,sContent,iRedomLength){


	sKey:string 约定key,不能进过32位
	sContent:密文 
	iRedomLength:int 随机数长度
	return string 解密后的字符串
    },AESUnLockToString : function(sKey,sContent,iRedomLength){
    },

	sKey:string 约定key,不能进过32位
	sContent:密文 
	iRedomLength:int 随机数长度
	return kspm 解密后的json对象
    AESUnLockToJson : function(sKey,sContent,iRedomLength){
    }
*/