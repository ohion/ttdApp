{"dependencies":[],"generated":{"js":"\t\n\t/**\n\t * jQuery MD5 hash algorithm function\n\t * \n\t * \t<code>\n\t * \t\tCalculate the md5 hash of a String \n\t * \t\tString $.md5 ( String str )\n\t * \t</code>\n\t * \n\t * Calculates the MD5 hash of str using the Â» RSA Data Security, Inc. MD5 Message-Digest Algorithm, and returns that hash. \n\t * MD5 (Message-Digest algorithm 5) is a widely-used cryptographic hash function with a 128-bit hash value. MD5 has been employed in a wide variety of security applications, and is also commonly used to check the integrity of data. The generated hash is also non-reversable. Data cannot be retrieved from the message digest, the digest uniquely identifies the data.\n\t * MD5 was developed by Professor Ronald L. Rivest in 1994. Its 128 bit (16 byte) message digest makes it a faster implementation than SHA-1.\n\t * This script is used to process a variable length message into a fixed-length output of 128 bits using the MD5 algorithm. It is fully compatible with UTF-8 encoding. It is very useful when u want to transfer encrypted passwords over the internet. If you plan using UTF-8 encoding in your project don't forget to set the page encoding to UTF-8 (Content-Type meta tag). \n\t * This function orginally get from the WebToolkit and rewrite for using as the jQuery plugin.\n\t * \n\t * Example\n\t * \tCode\n\t * \t\t<code>\n\t * \t\t\t$.md5(\"I'm Persian.\"); \n\t * \t\t</code>\n\t * \tResult\n\t * \t\t<code>\n\t * \t\t\t\"b8c901d0f02223f9761016cfff9d68df\"\n\t * \t\t</code>\n\t * \n\t * @alias Muhammad Hussein Fattahizadeh < muhammad [AT] semnanweb [DOT] com >\n\t * @link http://www.semnanweb.com/jquery-plugin/md5.html\n\t * @see http://www.webtoolkit.info/\n\t * @license http://www.gnu.org/licenses/gpl.html [GNU General Public License]\n\t * @param {jQuery} {md5:function(string))\n\t * @return string\n\t */\n\t\n\t(function($){\n\t\t\n\t\tvar rotateLeft = function(lValue, iShiftBits) {\n\t\t\treturn (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\n\t\t}\n\t\t\n\t\tvar addUnsigned = function(lX, lY) {\n\t\t\tvar lX4, lY4, lX8, lY8, lResult;\n\t\t\tlX8 = (lX & 0x80000000);\n\t\t\tlY8 = (lY & 0x80000000);\n\t\t\tlX4 = (lX & 0x40000000);\n\t\t\tlY4 = (lY & 0x40000000);\n\t\t\tlResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\n\t\t\tif (lX4 & lY4) return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n\t\t\tif (lX4 | lY4) {\n\t\t\t\tif (lResult & 0x40000000) return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n\t\t\t\telse return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n\t\t\t} else {\n\t\t\t\treturn (lResult ^ lX8 ^ lY8);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar F = function(x, y, z) {\n\t\t\treturn (x & y) | ((~ x) & z);\n\t\t}\n\t\t\n\t\tvar G = function(x, y, z) {\n\t\t\treturn (x & z) | (y & (~ z));\n\t\t}\n\t\t\n\t\tvar H = function(x, y, z) {\n\t\t\treturn (x ^ y ^ z);\n\t\t}\n\t\t\n\t\tvar I = function(x, y, z) {\n\t\t\treturn (y ^ (x | (~ z)));\n\t\t}\n\t\t\n\t\tvar FF = function(a, b, c, d, x, s, ac) {\n\t\t\ta = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac));\n\t\t\treturn addUnsigned(rotateLeft(a, s), b);\n\t\t};\n\t\t\n\t\tvar GG = function(a, b, c, d, x, s, ac) {\n\t\t\ta = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac));\n\t\t\treturn addUnsigned(rotateLeft(a, s), b);\n\t\t};\n\t\t\n\t\tvar HH = function(a, b, c, d, x, s, ac) {\n\t\t\ta = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac));\n\t\t\treturn addUnsigned(rotateLeft(a, s), b);\n\t\t};\n\t\t\n\t\tvar II = function(a, b, c, d, x, s, ac) {\n\t\t\ta = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac));\n\t\t\treturn addUnsigned(rotateLeft(a, s), b);\n\t\t};\n\t\t\n\t\tvar convertToWordArray = function(string) {\n\t\t\tvar lWordCount;\n\t\t\tvar lMessageLength = string.length;\n\t\t\tvar lNumberOfWordsTempOne = lMessageLength + 8;\n\t\t\tvar lNumberOfWordsTempTwo = (lNumberOfWordsTempOne - (lNumberOfWordsTempOne % 64)) / 64;\n\t\t\tvar lNumberOfWords = (lNumberOfWordsTempTwo + 1) * 16;\n\t\t\tvar lWordArray = Array(lNumberOfWords - 1);\n\t\t\tvar lBytePosition = 0;\n\t\t\tvar lByteCount = 0;\n\t\t\twhile (lByteCount < lMessageLength) {\n\t\t\t\tlWordCount = (lByteCount - (lByteCount % 4)) / 4;\n\t\t\t\tlBytePosition = (lByteCount % 4) * 8;\n\t\t\t\tlWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));\n\t\t\t\tlByteCount++;\n\t\t\t}\n\t\t\tlWordCount = (lByteCount - (lByteCount % 4)) / 4;\n\t\t\tlBytePosition = (lByteCount % 4) * 8;\n\t\t\tlWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\n\t\t\tlWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n\t\t\tlWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n\t\t\treturn lWordArray;\n\t\t};\n\t\t\n\t\tvar wordToHex = function(lValue) {\n\t\t\tvar WordToHexValue = \"\", WordToHexValueTemp = \"\", lByte, lCount;\n\t\t\tfor (lCount = 0; lCount <= 3; lCount++) {\n\t\t\t\tlByte = (lValue >>> (lCount * 8)) & 255;\n\t\t\t\tWordToHexValueTemp = \"0\" + lByte.toString(16);\n\t\t\t\tWordToHexValue = WordToHexValue + WordToHexValueTemp.substr(WordToHexValueTemp.length - 2, 2);\n\t\t\t}\n\t\t\treturn WordToHexValue;\n\t\t};\n\t\t\n\t\tvar uTF8Encode = function(string) {\n\t\t\tstring = string.replace(/\\x0d\\x0a/g, \"\\x0a\");\n\t\t\tvar output = \"\";\n\t\t\tfor (var n = 0; n < string.length; n++) {\n\t\t\t\tvar c = string.charCodeAt(n);\n\t\t\t\tif (c < 128) {\n\t\t\t\t\toutput += String.fromCharCode(c);\n\t\t\t\t} else if ((c > 127) && (c < 2048)) {\n\t\t\t\t\toutput += String.fromCharCode((c >> 6) | 192);\n\t\t\t\t\toutput += String.fromCharCode((c & 63) | 128);\n\t\t\t\t} else {\n\t\t\t\t\toutput += String.fromCharCode((c >> 12) | 224);\n\t\t\t\t\toutput += String.fromCharCode(((c >> 6) & 63) | 128);\n\t\t\t\t\toutput += String.fromCharCode((c & 63) | 128);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t\t\n\t\t$.extend({\n\t\t\tmd5: function(string) {\n\t\t\t\tvar x = Array();\n\t\t\t\tvar k, AA, BB, CC, DD, a, b, c, d;\n\t\t\t\tvar S11=7, S12=12, S13=17, S14=22;\n\t\t\t\tvar S21=5, S22=9 , S23=14, S24=20;\n\t\t\t\tvar S31=4, S32=11, S33=16, S34=23;\n\t\t\t\tvar S41=6, S42=10, S43=15, S44=21;\n\t\t\t\tstring = uTF8Encode(string);\n\t\t\t\tx = convertToWordArray(string);\n\t\t\t\ta = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n\t\t\t\tfor (k = 0; k < x.length; k += 16) {\n\t\t\t\t\tAA = a; BB = b; CC = c; DD = d;\n\t\t\t\t\ta = FF(a, b, c, d, x[k+0],  S11, 0xD76AA478);\n\t\t\t\t\td = FF(d, a, b, c, x[k+1],  S12, 0xE8C7B756);\n\t\t\t\t\tc = FF(c, d, a, b, x[k+2],  S13, 0x242070DB);\n\t\t\t\t\tb = FF(b, c, d, a, x[k+3],  S14, 0xC1BDCEEE);\n\t\t\t\t\ta = FF(a, b, c, d, x[k+4],  S11, 0xF57C0FAF);\n\t\t\t\t\td = FF(d, a, b, c, x[k+5],  S12, 0x4787C62A);\n\t\t\t\t\tc = FF(c, d, a, b, x[k+6],  S13, 0xA8304613);\n\t\t\t\t\tb = FF(b, c, d, a, x[k+7],  S14, 0xFD469501);\n\t\t\t\t\ta = FF(a, b, c, d, x[k+8],  S11, 0x698098D8);\n\t\t\t\t\td = FF(d, a, b, c, x[k+9],  S12, 0x8B44F7AF);\n\t\t\t\t\tc = FF(c, d, a, b, x[k+10], S13, 0xFFFF5BB1);\n\t\t\t\t\tb = FF(b, c, d, a, x[k+11], S14, 0x895CD7BE);\n\t\t\t\t\ta = FF(a, b, c, d, x[k+12], S11, 0x6B901122);\n\t\t\t\t\td = FF(d, a, b, c, x[k+13], S12, 0xFD987193);\n\t\t\t\t\tc = FF(c, d, a, b, x[k+14], S13, 0xA679438E);\n\t\t\t\t\tb = FF(b, c, d, a, x[k+15], S14, 0x49B40821);\n\t\t\t\t\ta = GG(a, b, c, d, x[k+1],  S21, 0xF61E2562);\n\t\t\t\t\td = GG(d, a, b, c, x[k+6],  S22, 0xC040B340);\n\t\t\t\t\tc = GG(c, d, a, b, x[k+11], S23, 0x265E5A51);\n\t\t\t\t\tb = GG(b, c, d, a, x[k+0],  S24, 0xE9B6C7AA);\n\t\t\t\t\ta = GG(a, b, c, d, x[k+5],  S21, 0xD62F105D);\n\t\t\t\t\td = GG(d, a, b, c, x[k+10], S22, 0x2441453);\n\t\t\t\t\tc = GG(c, d, a, b, x[k+15], S23, 0xD8A1E681);\n\t\t\t\t\tb = GG(b, c, d, a, x[k+4],  S24, 0xE7D3FBC8);\n\t\t\t\t\ta = GG(a, b, c, d, x[k+9],  S21, 0x21E1CDE6);\n\t\t\t\t\td = GG(d, a, b, c, x[k+14], S22, 0xC33707D6);\n\t\t\t\t\tc = GG(c, d, a, b, x[k+3],  S23, 0xF4D50D87);\n\t\t\t\t\tb = GG(b, c, d, a, x[k+8],  S24, 0x455A14ED);\n\t\t\t\t\ta = GG(a, b, c, d, x[k+13], S21, 0xA9E3E905);\n\t\t\t\t\td = GG(d, a, b, c, x[k+2],  S22, 0xFCEFA3F8);\n\t\t\t\t\tc = GG(c, d, a, b, x[k+7],  S23, 0x676F02D9);\n\t\t\t\t\tb = GG(b, c, d, a, x[k+12], S24, 0x8D2A4C8A);\n\t\t\t\t\ta = HH(a, b, c, d, x[k+5],  S31, 0xFFFA3942);\n\t\t\t\t\td = HH(d, a, b, c, x[k+8],  S32, 0x8771F681);\n\t\t\t\t\tc = HH(c, d, a, b, x[k+11], S33, 0x6D9D6122);\n\t\t\t\t\tb = HH(b, c, d, a, x[k+14], S34, 0xFDE5380C);\n\t\t\t\t\ta = HH(a, b, c, d, x[k+1],  S31, 0xA4BEEA44);\n\t\t\t\t\td = HH(d, a, b, c, x[k+4],  S32, 0x4BDECFA9);\n\t\t\t\t\tc = HH(c, d, a, b, x[k+7],  S33, 0xF6BB4B60);\n\t\t\t\t\tb = HH(b, c, d, a, x[k+10], S34, 0xBEBFBC70);\n\t\t\t\t\ta = HH(a, b, c, d, x[k+13], S31, 0x289B7EC6);\n\t\t\t\t\td = HH(d, a, b, c, x[k+0],  S32, 0xEAA127FA);\n\t\t\t\t\tc = HH(c, d, a, b, x[k+3],  S33, 0xD4EF3085);\n\t\t\t\t\tb = HH(b, c, d, a, x[k+6],  S34, 0x4881D05);\n\t\t\t\t\ta = HH(a, b, c, d, x[k+9],  S31, 0xD9D4D039);\n\t\t\t\t\td = HH(d, a, b, c, x[k+12], S32, 0xE6DB99E5);\n\t\t\t\t\tc = HH(c, d, a, b, x[k+15], S33, 0x1FA27CF8);\n\t\t\t\t\tb = HH(b, c, d, a, x[k+2],  S34, 0xC4AC5665);\n\t\t\t\t\ta = II(a, b, c, d, x[k+0],  S41, 0xF4292244);\n\t\t\t\t\td = II(d, a, b, c, x[k+7],  S42, 0x432AFF97);\n\t\t\t\t\tc = II(c, d, a, b, x[k+14], S43, 0xAB9423A7);\n\t\t\t\t\tb = II(b, c, d, a, x[k+5],  S44, 0xFC93A039);\n\t\t\t\t\ta = II(a, b, c, d, x[k+12], S41, 0x655B59C3);\n\t\t\t\t\td = II(d, a, b, c, x[k+3],  S42, 0x8F0CCC92);\n\t\t\t\t\tc = II(c, d, a, b, x[k+10], S43, 0xFFEFF47D);\n\t\t\t\t\tb = II(b, c, d, a, x[k+1],  S44, 0x85845DD1);\n\t\t\t\t\ta = II(a, b, c, d, x[k+8],  S41, 0x6FA87E4F);\n\t\t\t\t\td = II(d, a, b, c, x[k+15], S42, 0xFE2CE6E0);\n\t\t\t\t\tc = II(c, d, a, b, x[k+6],  S43, 0xA3014314);\n\t\t\t\t\tb = II(b, c, d, a, x[k+13], S44, 0x4E0811A1);\n\t\t\t\t\ta = II(a, b, c, d, x[k+4],  S41, 0xF7537E82);\n\t\t\t\t\td = II(d, a, b, c, x[k+11], S42, 0xBD3AF235);\n\t\t\t\t\tc = II(c, d, a, b, x[k+2],  S43, 0x2AD7D2BB);\n\t\t\t\t\tb = II(b, c, d, a, x[k+9],  S44, 0xEB86D391);\n\t\t\t\t\ta = addUnsigned(a, AA);\n\t\t\t\t\tb = addUnsigned(b, BB);\n\t\t\t\t\tc = addUnsigned(c, CC);\n\t\t\t\t\td = addUnsigned(d, DD);\n\t\t\t\t}\n\t\t\t\tvar tempValue = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);\n\t\t\t\treturn tempValue.toLowerCase();\n\t\t\t}\n\t\t});\n\t})(jQuery);"},"hash":"da548f7d2e2d8e2a73ed3da91d8b220b"}