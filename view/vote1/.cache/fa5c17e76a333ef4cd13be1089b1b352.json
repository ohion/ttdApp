{"dependencies":[],"generated":{"js":"/*!\n * template.js v0.7.1 (https://github.com/yanhaijing/template.js)\n * API https://github.com/yanhaijing/template.js/blob/master/doc/api.md\n * Copyright 2015 yanhaijing. All Rights Reserved\n * Licensed under MIT (https://github.com/yanhaijing/template.js/blob/master/MIT-LICENSE.txt)\n */\n;(function(root, factory) {\n    var template = factory(root);\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define('template', function() {\n            return template;\n        });\n    } else if (typeof exports === 'object') {\n        // Node.js\n        module.exports = template;\n    } else {\n        // Browser globals\n        var _template = root.template;\n\n        template.noConflict = function() {\n            if (root.template === template) {\n                root.template = _template;\n            }\n\n            return template;\n        };\n        root.template = template;\n    }\n}(this, function(root) {\n    'use strict';\n    var o = {\n        sTag: '<%',//开始标签\n        eTag: '%>',//结束标签\n        compress: false,//是否压缩html\n        escape: true, //默认输出是否进行HTML转义\n        error: function (e) {}//错误回调\n    };\n    var functionMap = {}; //内部函数对象\n    //修饰器前缀\n    var modifierMap = {\n        '': function (param) {return nothing(param)},\n        'h': function (param) {return encodeHTML(param)},\n        'u': function (param) {return encodeURI(param)}\n    };\n\n    var toString = {}.toString;\n    var slice = [].slice;\n    function type(x) {\n        if(x === null){\n            return 'null';\n        }\n\n        var t= typeof x;\n\n        if(t !== 'object'){\n            return t;\n        }\n\n        var c = toString.call(x).slice(8, -1).toLowerCase();\n        if(c !== 'object'){\n            return c;\n        }\n\n        if(x.constructor==Object){\n            return c;\n        }\n\n        return 'unkonw';\n    }\n\n    function isObject(obj) {\n        return type(obj) === 'object';\n    }\n    function isFunction(fn) {\n        return type(fn) === 'function';\n    }\n    function isString(str) {\n        return type(str) === 'string';\n    }\n    function extend() {\n        var target = arguments[0] || {};\n        var arrs = slice.call(arguments, 1);\n        var len = arrs.length;\n     \n        for (var i = 0; i < len; i++) {\n            var arr = arrs[i];\n            for (var name in arr) {\n                target[name] = arr[name];\n            }\n     \n        }\n        return target;\n    }\n    function clone() {\n        var args = slice.call(arguments);\n        return extend.apply(null, [{}].concat(args));\n    }\n    function nothing(param) {\n        return param;\n    }\n    function encodeHTML(source) {\n        return String(source)\n            .replace(/&/g,'&amp;')\n            .replace(/</g,'&lt;')\n            .replace(/>/g,'&gt;')\n            .replace(/\\\\/g,'&#92;')\n            .replace(/\"/g,'&quot;')\n            .replace(/'/g,'&#39;');\n    }\n    function compress(html) {\n        return html.replace(/\\s+/g, ' ').replace(/<!--[\\w\\W]*?-->/g, '');\n    }\n    function consoleAdapter(cmd, msg) {\n        typeof console !== 'undefined' && console[cmd] && console[cmd](msg);\n    }\n    function handelError(e) {\n        var message = 'template.js error\\n\\n';\n\n        for (var key in e) {\n            message += '<' + key + '>\\n' + e[key] + '\\n\\n';\n        }\n        message += '<message>\\n' + e.message + '\\n\\n';\n        consoleAdapter('error', message);\n\n        o.error(e);\n        function error() {\n            return 'template.js error';\n        }\n        error.toString = function () {\n            return '__code__ = \"template.js error\"';\n        }\n        return error;\n    }\n    function parse(tpl, opt) {\n        var code = '';\n        var sTag = opt.sTag;\n        var eTag = opt.eTag;\n        var escape = opt.escape;\n        function parsehtml(line) {\n            // 单双引号转义，换行符替换为空格\n            line = line.replace(/('|\")/g, '\\\\$1').replace(/\\n/g, ' ');\n            return ';__code__ += (\"' + line + '\")\\n';\n        }\n        function parsejs(line) {              \n            //var reg = /^(:?)(.*?)=(.*)$/;\n            var reg = /^(?:=|(:.*?)=)(.*)$/\n            var html;\n            var arr;\n            var modifier;\n\n            // = := :*=\n            // :h=123 [':h=123', 'h', '123']\n            if (arr = reg.exec(line)) {\n                html = arr[2]; // 输出\n                if (Boolean(arr[1])) {\n                    // :开头\n                    modifier = arr[1].slice(1);\n                } else {\n                    // = 开头\n                    modifier = escape ? 'h' : '';\n                }\n\n                return ';__code__ += __modifierMap__[\"' + modifier + '\"](typeof (' + html + ') !== \"undefined\" ? (' + html + ') : \"\")\\n';\n            }\n            \n            //原生js\n            return ';' + line + '\\n';\n        }\n\n        var tokens = tpl.split(sTag);\n\n        for (var i = 0, len = tokens.length; i < len; i++) {\n            var token = tokens[i].split(eTag);\n\n            if (token.length === 1) {\n                code += parsehtml(token[0]);\n            } else {\n                code += parsejs(token[0], true);\n                if (token[1]) {\n                    code += parsehtml(token[1]);\n                }\n            }\n        }\n\n        return code;\n    }\n    function compiler(tpl, opt) {\n        var mainCode = parse(tpl, opt);\n\n        var headerCode = '\\n' + \n        '    var html = (function (__data__, __modifierMap__) {\\n' + \n        '        var __str__ = \"\", __code__ = \"\";\\n' + \n        '        for(var key in __data__) {\\n' + \n        '            __str__+=(\"var \" + key + \"=__data__[\\'\" + key + \"\\'];\");\\n' + \n        '        }\\n' + \n        '        eval(__str__);\\n\\n';\n\n        var footerCode = '\\n' + \n        '        ;return __code__;\\n' + \n        '    }(__data__, __modifierMap__));\\n' + \n        '    return html;\\n';\n\n        var code = headerCode + mainCode + footerCode;\n        code = code.replace(/[\\r]/g, ' '); // ie 7 8 会报错，不知道为什么\n        try {\n            var Render = new Function('__data__', '__modifierMap__', code); \n            Render.toString = function () {\n                return mainCode;\n            }\n            return Render;\n        } catch(e) {\n            e.temp = 'function anonymous(__data__, __modifierMap__) {' + code + '}';\n            throw e;\n        }  \n    }\n    function compile(tpl, opt) {\n        opt = clone(o, opt);\n\n        try {\n            var Render = compiler(tpl, opt);\n        } catch(e) {\n            e.name = 'CompileError';\n            e.tpl = tpl;\n            e.render = e.temp;\n            delete e.temp;\n            return handelError(e);\n        }\n\n        function render(data) {\n            data = clone(functionMap, data);\n            try {\n                var html = Render(data, modifierMap);\n                html = opt.compress ? compress(html) : html;\n                return html;\n            } catch(e) {\n                e.name = 'RenderError';\n                e.tpl = tpl;\n                e.render = Render.toString();\n                return handelError(e)();\n            }            \n        }\n\n        render.toString = function () {\n            return Render.toString();\n        };\n        return render;\n    }\n    function template(tpl, data) {\n        if (typeof tpl !== 'string') {\n            return '';\n        }\n\n        var fn = compile(tpl);\n        if (!isObject(data)) {\n            return fn;\n        }\n\n        return fn(data);\n    }\n\n    template.config = function (option) {\n        if (isObject(option)) {\n            o = extend(o, option);\n        }\n        return clone(o);\n    };\n\n    template.registerFunction = function(name, fn) {\n        if (!isString(name)) {\n            return clone(functionMap);\n        }\n        if (!isFunction(fn)) {\n            return functionMap[name];\n        }\n\n        return functionMap[name] = fn;\n    }\n    template.unregisterFunction = function (name) {\n        if (!isString(name)) {\n            return false;\n        }\n        delete functionMap[name];\n        return true;\n    }\n\n    template.registerModifier = function(name, fn) {\n        if (!isString(name)) {\n            return clone(modifierMap);\n        }\n        if (!isFunction(fn)) {\n            return modifierMap[name];\n        }\n\n        return modifierMap[name] = fn;\n    }\n    template.unregisterModifier = function (name) {\n        if (!isString(name)) {\n            return false;\n        }\n        delete modifierMap[name];\n        return true;\n    }\n\n    template.__encodeHTML = encodeHTML;\n    template.__compress = compress;\n    template.__handelError = handelError;\n    template.__compile = compile;\n    template.version = '0.7.1';\n    return template;\n}));\n"},"hash":"a4962f37018d79d6c670d190de67c6b1"}